{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u7b80\u4ecb","text":"<p>tkit \u610f\u4e3a tool kit, \u76ee\u524d\u662f\u4e00\u4e2a\u57fa\u4e8e Gin \u7684 Web \u5f00\u53d1\u6846\u67b6\uff0c\u5176\u5c06\u5e38\u7528\u7684\u670d\u52a1\u6cbb\u7406\u8fdb\u884c\u5c01\u88c5\u6253\u5305\ud83d\udce6</p> <p>\u5e0c\u671b\u540e\u7eed\u80fd\u6e10\u8fdb\u6210\u4e00\u4e2a\u5fae\u670d\u52a1\u5f00\u53d1\u5de5\u5177\u5305/\u6846\u67b6</p>"},{"location":"#_2","title":"\u5de5\u5177\u94fe","text":"<ul> <li>\u65e5\u5fd7</li> <li>\u76d1\u63a7\u544a\u8b66</li> <li>\u94fe\u8def\u8ffd\u8e2a</li> <li>\u5f02\u6b65\u4efb\u52a1</li> <li>\u6d88\u606f\u961f\u5217</li> </ul>"},{"location":"quick_start/","title":"Quick Start","text":""},{"location":"quick_start/#_1","title":"\u5b89\u88c5\u5305","text":"<pre><code>$ go get github.com/FarmerChillax/tkit\n</code></pre>"},{"location":"quick_start/#_2","title":"\u5feb\u901f\u5f00\u59cb","text":"<ol> <li>\u521d\u59cb\u5316\u5e94\u7528\u6784\u5efa\u5668</li> </ol> <pre><code>func main() {\n    builder, err := app.NewBuilder(&amp;tkit.Application{\n        Name: \"basic-demo\", // \u5e94\u7528\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a\n    })\n    if err != nil {\n        log.Fatalln(\"app.NewBuilder err: \", err)\n    }\n}\n</code></pre> <ol> <li>\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\u5e76\u6ce8\u518c http \u8def\u7531</li> </ol> <pre><code>type PingRequest struct{}\n\ntype PingResponse struct {\n    Msg string `json:\"message\"`\n}\n\nfunc PingHandler(ctx *gin.Context, req *PingRequest) (*PingResponse, error) {\n    tkit.Logger.Infof(ctx, \"headers: %v\", ctx.Request.Header)\n    return &amp;PingResponse{Msg: \"pong\"}, nil\n}\n\nfunc main() {\n    builder, err := app.NewBuilder(&amp;tkit.Application{\n        Name: \"basic-demo\",\n    })\n    if err != nil {\n        log.Fatalln(\"app.NewBuilder err: \", err)\n    }\n\n    err = builder.ListenGinServer(&amp;tkit.GinApplication{\n        RegisterHttpRoute: func(e *gin.Engine) error {\n            // \u6ce8\u518c\u8def\u7531\uff0c\u5e76\u4f7f\u7528 wrap \u65b9\u6cd5\u8fdb\u884c\u8bf7\u6c42\u53c2\u6570\u89e3\u6790\u548c\u8fd4\u56de\u503c\u5c01\u88c5\n            e.GET(\"/ping\", tkit.Wrap(PingHandler))\n            return nil\n        },\n    })\n    if err != nil {\n        log.Fatalln(\"builder.ListenGinServer err: \", err)\n    }\n}\n</code></pre> <ol> <li>\u8fd0\u884c\u7a0b\u5e8f</li> </ol> <pre><code>$ go run main.go\n&gt;&gt;&gt;\n2024/02/14 14:15:16 port is invalid, use default port 6000\n[GIN-debug] [WARNING] Running in \"debug\" mode. Switch to \"release\" mode in production.\n - using env:   export GIN_MODE=release\n - using code:  gin.SetMode(gin.ReleaseMode)\n\n[GIN-debug] GET    /debug/pprof/             --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapF.func1 (5 handlers)\n[GIN-debug] GET    /debug/pprof/cmdline      --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapF.func2 (5 handlers)\n[GIN-debug] GET    /debug/pprof/profile      --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapF.func3 (5 handlers)\n[GIN-debug] POST   /debug/pprof/symbol       --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapF.func4 (5 handlers)\n[GIN-debug] GET    /debug/pprof/symbol       --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapF.func5 (5 handlers)\n[GIN-debug] GET    /debug/pprof/trace        --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapF.func6 (5 handlers)\n[GIN-debug] GET    /debug/pprof/allocs       --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapH.func7 (5 handlers)\n[GIN-debug] GET    /debug/pprof/block        --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapH.func8 (5 handlers)\n[GIN-debug] GET    /debug/pprof/goroutine    --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapH.func9 (5 handlers)\n[GIN-debug] GET    /debug/pprof/heap         --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapH.func10 (5 handlers)\n[GIN-debug] GET    /debug/pprof/mutex        --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapH.func11 (5 handlers)\n[GIN-debug] GET    /debug/pprof/threadcreate --&gt; github.com/gin-contrib/pprof.RouteRegister.WrapH.func12 (5 handlers)\n[GIN-debug] GET    /metrics                  --&gt; github.com/FarmerChillax/tkit/internal/metrics.RegisterGin.WrapH.func1 (5 handlers)\n[GIN-debug] GET    /health                   --&gt; github.com/FarmerChillax/tkit/internal/metrics.RegisterGin.HealthHandler.func2 (5 handlers)\n[GIN-debug] GET    /ping                     --&gt; main.main.func1.1 (5 handlers)\n  _  __  _   _             _                    _\n | |/ / (_) | |_     ___  | |_    __ _   _ __  | |_\n | ' /  | | | __|   / __| | __|  / _` | | '__| | __|\n | . \\  | | | |_    \\__ \\ | |_  | (_| | | |    | |_\n |_|\\_\\ |_|  \\__|   |___/  \\__|  \\__,_| |_|     \\__|\nFormatter.Format:  map[]\n{\"level\":\"info\",\"msg\":\"http server listen on: 127.0.0.1:6000 .\",\"span_id\":\"0000000000000000\",\"time\":\"2024-02-14T14:15:16+08:00\",\"trace_id\":\"00000000000000000000000000000000\"}\n</code></pre> <ol> <li>\u8bf7\u6c42\u4e0a\u9762\u5b9a\u4e49\u7684 <code>ping</code> \u63a5\u53e3\u6216\u8005\u6846\u67b6\u5185\u90e8\u63a5\u53e3</li> </ol> <pre><code>curl http://localhost:6000/ping\n&gt;&gt;&gt; {\"message\":\"pong\"}\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/config/","title":"\u914d\u7f6e\u7ba1\u7406","text":"<p>\u5728\u6846\u67b6\u7684\u542f\u52a8\u6d41\u7a0b\u4e2d\uff0c\u4f1a\u9ed8\u8ba4\u8c03\u7528 LoadConfig \u65b9\u6cd5, \u6211\u4eec\u63a8\u8350\u7528\u6237\u81ea\u5df1\u7684\u914d\u7f6e\u5728\u8be5\u65b9\u6cd5\u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002</p> <p>\u5728\u6211\u4eec\u7684\u5b9e\u9645\u5e94\u7528\u4e2d\u53d1\u73b0\u597d\u5904\u9887\u591a\uff0c\u8fd9\u6837\u5b50\u53ef\u4ee5\u7edf\u4e00\u6574\u4f53\u7684\u521d\u59cb\u5316\u4ee3\u7801\uff0c\u4e5f\u80fd\u4fdd\u8bc1\u6574\u4f53\u5e94\u7528\u7ed3\u6784\u7684\u4e00\u81f4\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u5efa\u8bae\u7edf\u4e00\u5728\u6b64\u5904\u8fdb\u884c\u81ea\u5b9a\u4e49\u914d\u7f6e\u7b49\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/error/","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u9519\u8bef\u5904\u7406\u7684\u8bbe\u8ba1\u4e0a\u4e3b\u8981\u662f\u4e3a\u4e86\u6846\u67b6\u6838\u5fc3\u7684 Wrap \u51fd\u6570\u8fdb\u884c\u914d\u5408\uff0c\u5305\u542b\u300chttp \u9519\u8bef\u300d\u548c\u300c\u4e1a\u52a1\u9519\u8bef\u7801\u300d\u4e24\u4e2a\u65b9\u9762\u7684\u601d\u8003\uff0c\u4e0b\u9762\u5177\u4f53\u5c55\u5f00\u8bb2\u8bb2\uff1a</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/error/#_2","title":"\u8bbe\u8ba1","text":"<p>\u5728\u9519\u8bef\u7801\u4e0a\uff0c\u6846\u67b6\u5c42\u4e3b\u8981\u5206\u4e3a 3 \u4e2a\u90e8\u5206\uff0c\u5176\u5b9a\u4e49\u4e3a\uff1a - statusCode: \u8868\u793a http \u72b6\u6001\u7801 - code: \u8868\u793a\u4e1a\u52a1\u7801 - msg: \u8868\u793a\u9519\u8bef\u4fe1\u606f\u63cf\u8ff0</p> <p>\u6b64\u5916\u8fd8\u63d0\u4f9b\u4e86 id \u5b57\u6bb5\u7528\u4e8e\u53ef\u9009\u7684\u8fd4\u56de RequestID</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/error/#_3","title":"\u4f7f\u7528\u8bbe\u8ba1","text":"<p>\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u540c\u4e00\u4e2a\u9519\u8bef\u7801\u4f1a\u88ab\u53cd\u590d\u4f7f\u7528\uff0c\u4f46\u5176\u5185\u90e8\u7684\u4fe1\u606f\u53ef\u80fd\u5728\u67d0\u4e9b\u65f6\u5019\u662f\u9700\u8981\u4e34\u65f6\u4fee\u6539\u7684\uff08\u6bd4\u5982 Msg\uff09 \u56e0\u6b64\u5728 error \u7684\u8bbe\u8ba1\u4e0a\uff0c\u6846\u67b6\u63d0\u4f9b\u4e86\u591a\u4e2a <code>WithXXX</code> \u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u4e34\u65f6\u7684\u5c06\u9519\u8bef\u7801\u5185\u90e8\u4fe1\u606f\u8fdb\u884c\u4fee\u6539\uff0c \u800c\u4e0d\u5f71\u54cd\u9519\u8bef\u7801\u672c\u8eab\uff0c\u4f7f\u7528\u65b9\u6cd5\uff1a</p> <pre><code>func (us *UserService) Register(ctx context.Context, req *api.UserRegisterRequest) (*api.EmptyResponse, error) {\n    db := tkit.Database.Get(ctx)\n    userRepo := repository.NewUserRepo(db)\n    err := userRepo.Create(&amp;mysql.User{\n        Username: req.Username,\n        Password: req.Password,\n    })\n    if err != nil {\n        tkit.Logger.Errorf(ctx, \"create user failed: %v\", err)\n        return nil, errcode.DatabaseError.WithMsg(\"\u4e34\u65f6\u7684\u9519\u8bef\u4fe1\u606f\")\n    }\n\n    return &amp;api.EmptyResponse{}, nil\n}\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/error/#_4","title":"\u5b9a\u4e49\u9519\u8bef\u7801","text":"<p>\u6846\u67b6\u5e76\u4e0d\u63d0\u4f9b\u4efb\u4f55\u9884\u8bbe\u7684\u9519\u8bef\u7801\uff0c\u56e0\u6b64\u7528\u6237\u9700\u8981\u81ea\u5df1\u58f0\u660e\u9519\u8bef\u7801\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528 layout \u5185\u7f6e\u7684\uff09</p> <p>\u63a5\u53e3\u58f0\u660e\u5982\u4e0b\uff1a</p> <pre><code>func NewError(httpStatusCode, businessCode int, msg string) Error\n</code></pre> <p>\u7528\u4f8b\uff1a</p> <pre><code>var (\n    tkit.NewError(400, 10000001, \"\u5165\u53c2\u9519\u8bef\")\n    // \u66f4\u591a\u7684\u9519\u8bef\u7801...\n)\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/log/","title":"\u65e5\u5fd7\u5904\u7406","text":"<p>\u5728\u6846\u67b6\u4e2d\u6709\u63d0\u4f9b\u7edf\u4e00\u7684\u65e5\u5fd7\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u8fdb\u884c\u6ce8\u5165\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002\u53ef\u4ee5\u76f4\u63a5\u590d\u7528 <code>tkit.Logger</code>\u3002</p> <p>\u6216\u662f\u5728\u6846\u67b6\u542f\u52a8\u6d41\u7a0b\u4e2d\u6ce8\u518c\u81ea\u5df1\u81ea\u5b9a\u4e49\u7684 Logger \u5230 <code>tkit.Logger</code> \u4e2d\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/log/#_2","title":"\u9ed8\u8ba4\u7ec4\u4ef6","text":""},{"location":"%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/log/#_3","title":"\u65e5\u5fd7\u89c4\u8303","text":"<p>\u5728\u6846\u67b6\u4e2d\uff0c\u9ed8\u8ba4\u4f1a\u628a\u65e5\u5fd7\u7edf\u4e00\u5199\u5165 <code>os.stdout</code> \u4e0e <code>os.stderr</code>\uff0c\u65e5\u5fd7\u683c\u5f0f\u4e3a JSON\u3002</p> <p>\u5728\u65e5\u5fd7\u7c7b\u522b\u4e0a\uff0c\u9ed8\u8ba4\u5206\u4e3a\uff1a - err\uff1a\u9519\u8bef\u65e5\u5fd7\uff0c\u4e1a\u52a1\u5e94\u7528\u548c\u6846\u67b6\u81ea\u8eab\u7684\u62a5\u9519\u3001\u5f02\u5e38\u7b49\u4fe1\u606f\u5747\u4f1a\u5199\u5165\u8be5\u7c7b\u522b\u3002 - access\uff1a\u8bbf\u95ee\u65e5\u5fd7\uff0c\u6846\u67b6\u81ea\u8eab\u7684\u6240\u6709\u8bbf\u95ee\u548c\u54cd\u5e94\u65e5\u5fd7\u4f1a\u5199\u5165\u8be5\u7c7b\u522b\u3002\u4e00\u822c\u4e0d\u5305\u542b\u4e1a\u52a1\u7684\u65e5\u5fd7\uff0c\u6bd4\u8f83\u7eaf\u51c0\u3002 - business\uff1a\u4e1a\u52a1\u65e5\u5fd7\uff0c\u4e1a\u52a1\u5e94\u7528\u6253\u7684\u5404\u7c7b\u4e1a\u52a1\u4fe1\u606f\uff0c\u4e00\u822c\u4fe1\u606f\u91cf\u8f83\u591a\u8f83\u6742\uff0c\u5e38\u7528\u4e8e\u4e1a\u52a1\u7efc\u5408\u6392\u67e5\u3002</p> <p>\u5728\u65e5\u5fd7\u5b58\u50a8\u4e0a\uff0c\u5efa\u8bae\u6309\u7167\u65e5\u5fd7\u7c7b\u522b\u548c\u670d\u52a1\u5f52\u7c7b\uff0c\u5982\uff1a /var/log/service/{\u65e5\u5fd7\u7c7b\u522b}/{\u670d\u52a1\u540d\u79f0} \u518d\u8f85\u4ee5\u65e5\u5fd7\u5207\u5272\u89c4\u5219\u8fdb\u884c\u6587\u4ef6\u5199\u5165\u3002</p>"},{"location":"%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/log/#_4","title":"\u5168\u5c40\u65e5\u5fd7\u5b9e\u4f8b","text":"<pre><code>var Logger LoggerIface\n</code></pre>"},{"location":"%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/log/#_5","title":"\u65e5\u5fd7\u63a5\u53e3\u65b9\u6cd5","text":"<pre><code>type LoggerIface interface {\n    // \u4e1a\u52a1\u65e5\u5fd7\n    Info(ctx context.Context, args ...interface{})\n    Infof(ctx context.Context, format string, args ...interface{})\n\n    // \u8b66\u544a\u65e5\u5fd7\n    Warn(ctx context.Context, args ...interface{})\n    Warnf(ctx context.Context, format string, args ...interface{})\n\n    // \u9519\u8bef\u65e5\u5fd7\n    Error(ctx context.Context, args ...interface{})\n    Errorf(ctx context.Context, format string, args ...interface{})\n}\n</code></pre>"}]}